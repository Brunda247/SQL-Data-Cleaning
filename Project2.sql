/* Cleaning Data  */

SELECT * FROM Project..NashvilleHousing

/* STANDARDIZE DATE FORMAT  */

SELECT SALEDATE FROM Project..NashvilleHousing

SELECT SALEDATE,CONVERT(DATE,SALEDATE) FROM Project..NashvilleHousing

UPDATE NashvilleHousing SET SALEDATE = CONVERT(DATE,SALEDATE)

ALTER TABLE NASHVILLEHOUSING ADD SALEDATECONVERTED DATE 

UPDATE NashvilleHousing SET SALEDATECONVERTED = CONVERT(DATE,SALEDATE)

SELECT SALEDATECONVERTED FROM Project..NashvilleHousing

SELECT SALEDATECONVERTED,CONVERT(DATE,SALEDATE) FROM Project..NashvilleHousing


/* POPULATE PROPERTY ADDRESS DATA  */

SELECT PropertyAddress FROM Project..NashvilleHousing 


SELECT PropertyAddress FROM Project..NashvilleHousing WHERE PropertyAddress IS NULL


SELECT * FROM Project..NashvilleHousing ORDER BY ParcelID

SELECT A.PARCELID,A.PROPERTYADDRESS, B.PARCELID,B.PROPERTYADDRESS FROM Project..NashvilleHousing A JOIN Project..NashvilleHousing B ON A.ParcelID=B.ParcelID

SELECT A.PARCELID,A.PROPERTYADDRESS, B.PARCELID,B.PROPERTYADDRESS FROM Project..NashvilleHousing A JOIN Project..NashvilleHousing B ON A.ParcelID=B.ParcelID AND A.[UniqueID ]<>B.[UniqueID ]

SELECT A.PARCELID,A.PROPERTYADDRESS, B.PARCELID,B.PROPERTYADDRESS FROM Project..NashvilleHousing A JOIN Project..NashvilleHousing B ON A.ParcelID=B.ParcelID AND A.[UniqueID ]<>B.[UniqueID ] WHERE A.PropertyAddress IS NULL

SELECT A.PARCELID,A.PROPERTYADDRESS, B.PARCELID,B.PROPERTYADDRESS ,ISNULL(A.PROPERTYADDRESS,B.PROPERTYADDRESS) FROM Project..NashvilleHousing A JOIN Project..NashvilleHousing B ON A.ParcelID=B.ParcelID AND A.[UniqueID ]<>B.[UniqueID ] WHERE A.PropertyAddress IS NULL

UPDATE A SET PROPERTYADDRESS =ISNULL(A.PROPERTYADDRESS,B.PROPERTYADDRESS) FROM Project..NashvilleHousing A JOIN Project..NashvilleHousing B ON A.ParcelID=B.ParcelID AND A.[UniqueID ]<>B.[UniqueID ] WHERE A.PropertyAddress IS NULL

SELECT A.PARCELID,A.PROPERTYADDRESS, B.PARCELID,B.PROPERTYADDRESS ,ISNULL(A.PROPERTYADDRESS,B.PROPERTYADDRESS) FROM Project..NashvilleHousing A JOIN Project..NashvilleHousing B ON A.ParcelID=B.ParcelID AND A.[UniqueID ]<>B.[UniqueID ] WHERE A.PropertyAddress IS NULL



/* BREAKING OUT ADDRESS INTO INDIVIDUAL COLUMNS (ADDRESS, CITY, STATE)  */

SELECT PROPERTYADDRESS FROM Project..NashvilleHousing

SELECT SUBSTRING(PROPERTYADDRESS,1,CHARINDEX(',',PROPERTYADDRESS)) AS ADDRESS FROM Project..NashvilleHousing --COMA COMING

SELECT SUBSTRING(PROPERTYADDRESS,1,CHARINDEX(',',PROPERTYADDRESS)) AS ADDRESS, CHARINDEX(',',PROPERTYADDRESS) AS ADDRESS FROM Project..NashvilleHousing

SELECT SUBSTRING(PROPERTYADDRESS,1,CHARINDEX(',',PROPERTYADDRESS)-1) AS ADDRESS FROM Project..NashvilleHousing  --COMA NOT COMING

SELECT SUBSTRING(PROPERTYADDRESS,1,CHARINDEX(',',PROPERTYADDRESS)-1) AS ADDRESS, SUBSTRING (PROPERTYADDRESS,CHARINDEX(',',PROPERTYADDRESS)+1,LEN(PROPERTYADDRESS)) AS ADDRESS FROM Project..NashvilleHousing 


ALTER TABLE NASHVILLEHOUSING ADD PROPERTYSPLITADDRESS NVARCHAR(255) 

UPDATE NashvilleHousing SET  PROPERTYSPLITADDRESS = SUBSTRING(PROPERTYADDRESS, 1,CHARINDEX(',',PROPERTYADDRESS)-1)

ALTER TABLE NASHVILLEHOUSING ADD PROPERTYSPLITCITY NVARCHAR(255) 

UPDATE NashvilleHousing SET PROPERTYSPLITCITY = SUBSTRING(PROPERTYADDRESS,CHARINDEX(',',PROPERTYADDRESS)+1,LEN(PROPERTYADDRESS))

SELECT * FROM Project..NashvilleHousing


SELECT OWNERADDRESS FROM Project..NashvilleHousing

SELECT PARSENAME(REPLACE(OWNERADDRESS,',','.'),3) FROM Project..NashvilleHousing

SELECT PARSENAME(REPLACE(OWNERADDRESS,',','.'),2) FROM Project..NashvilleHousing

SELECT PARSENAME(REPLACE(OWNERADDRESS,',','.'),1) FROM Project..NashvilleHousing

SELECT PARSENAME(REPLACE(OWNERADDRESS,',','.'),3), PARSENAME(REPLACE(OWNERADDRESS,',','.'),2), PARSENAME(REPLACE(OWNERADDRESS,',','.'),1) FROM Project..NashvilleHousing

ALTER TABLE NASHVILLEHOUSING ADD OWNERSPLITADDRESS NVARCHAR(255) 

UPDATE NashvilleHousing SET  OWNERSPLITADDRESS = PARSENAME(REPLACE(OWNERADDRESS,',','.'),3)

ALTER TABLE NASHVILLEHOUSING ADD OWNERSPLITCITY NVARCHAR(255) 

UPDATE NashvilleHousing SET  OWNERSPLITCITY = PARSENAME(REPLACE(OWNERADDRESS,',','.'),2)

ALTER TABLE NASHVILLEHOUSING ADD OWNERSPLITSTATE NVARCHAR(255) 

UPDATE NashvilleHousing SET  OWNERSPLITSTATE = PARSENAME(REPLACE(OWNERADDRESS,',','.'),1)

SELECT * FROM Project..NashvilleHousing


/*  CHANGE Y AND N TO YES AND NO IN "SOLD AS VACANT" FIELD  */

SELECT DISTINCT(SOLDASVACANT) FROM NashvilleHousing

SELECT DISTINCT(SOLDASVACANT),COUNT(SOLDASVACANT) FROM NashvilleHousing GROUP BY SOLDASVACANT 

SELECT DISTINCT(SOLDASVACANT),COUNT(SOLDASVACANT) FROM NashvilleHousing GROUP BY SOLDASVACANT ORDER BY 2

SELECT SOLDASVACANT,
 CASE WHEN SOLDASVACANT = 'Y' THEN 'YES'
      WHEN SOLDASVACANT = 'N' THEN 'NO'
	  ELSE SOLDASVACANT
	  END
FROM NashvilleHousing

UPDATE NashvilleHousing
SET SOLDASVACANT = CASE WHEN SOLDASVACANT = 'Y' THEN 'YES'
      WHEN SOLDASVACANT = 'N' THEN 'NO'
	  ELSE SOLDASVACANT
	  END

SELECT DISTINCT(SOLDASVACANT),COUNT(SOLDASVACANT) FROM NashvilleHousing GROUP BY SOLDASVACANT ORDER BY 2


/* REMOVE DUPLICATES  */

SELECT * FROM NashvilleHousing

SELECT *,
      ROW_NUMBER() OVER (
	  PARTITION BY PARCELID,
				   PROPERTYADDRESS,
				   SALEPRICE,
				   SALEDATE,
				   LEGALREFERENCE
				   ORDER BY 
				   UNIQUEID)ROW_NUM
FROM NashvilleHousing

SELECT *,
      ROW_NUMBER() OVER (
	  PARTITION BY PARCELID,
				   PROPERTYADDRESS,
				   SALEPRICE,
				   SALEDATE,
				   LEGALREFERENCE
				   ORDER BY 
				   UNIQUEID)ROW_NUM
FROM NashvilleHousing
ORDER BY ParcelID

WITH ROWNUMCTE AS(
SELECT *,
      ROW_NUMBER() OVER (
	  PARTITION BY PARCELID,
				   PROPERTYADDRESS,
				   SALEPRICE,
				   SALEDATE,
				   LEGALREFERENCE
				   ORDER BY 
				   UNIQUEID)ROW_NUM
FROM NashvilleHousing
)
--SELECT * FROM ROWNUMCTE
--SELECT * FROM ROWNUMCTE WHERE  ROW_NUM >1 ORDER BY PropertyAddress
--DELETE FROM ROWNUMCTE WHERE  ROW_NUM >1 --ORDER BY PropertyAddress
SELECT * FROM ROWNUMCTE WHERE  ROW_NUM >1 ORDER BY PropertyAddress

SELECT * FROM Project..NashvilleHousing


/* DELETE UNUSED COLUMNS  */

SELECT * FROM Project..NashvilleHousing

ALTER TABLE PROJECT.DBO.NASHVILLEHOUSING
DROP  COLUMN OWNERADDRESS,TAXDISTRICT,PROPERTYADDRESS

SELECT * FROM Project..NashvilleHousing


ALTER TABLE PROJECT.DBO.NASHVILLEHOUSING
DROP  COLUMN SALEDATE

SELECT * FROM Project..NashvilleHousing

